.hero {
    width: 100%;
    padding: 10vh 1rem 5vh 1rem; // Adjusted padding
    position: relative;
    display: flex;
    align-items: center; // Center items vertically by default
    flex-direction: column;
    gap: 3rem; // Reduced gap
    min-height: 70vh; // Ensure minimum height
    overflow: hidden; // Prevent globe overflow issues

    .globe {
        position: absolute;
        width: 100%;
        max-width: 60rem;
        top: -15rem; // Adjusted position
        left: 50%;
        transform: translateX(-50%);
        z-index: 1;
        opacity: 0.15; // Reduced opacity further
        pointer-events: none;
    }

    .text {
        display: flex;
        align-items: center;
        flex-direction: column;
        gap: 1.25rem;
        text-align: center;
        z-index: 2;
        position: relative;
        max-width: 65ch; // Limit text width for readability

        h1 {
            font-size: clamp(3rem, 6vw, 4rem); // Responsive font size
            line-height: 1.3; // Adjusted line height
            color: #1f2937; // Slightly darker heading
            font-weight: 800; // Bolder
            position: relative;
            z-index: 1;

            &:before { // Highlight effect
                width: 60%;
                height: 1rem; // Smaller highlight
                content: "";
                background-color: #e0e7ff; // Example different highlight color
                position: absolute;
                bottom: 0.1rem; // Adjusted position
                left: 50%;
                transform: translateX(-50%);
                z-index: -1;
                border-radius: 2px;
            }
        }

        p {
            font-size: clamp(0.9rem, 2vw, 1.05rem); // Responsive font size
            line-height: 1.8; // Adjusted line height
            color: #4b5563; // Softer text color
        }

        // ArrowButton styling might be handled globally or locally
         :global(.arrowBtn) { // Target ArrowButton if needed
             margin-top: 1rem;
         }
    }

    .graphic {
        z-index: 2;
        position: relative;
        width: 90%; // Responsive width
        max-width: 500px; // Max size for graphic

        // Ensure Lottie player respects container size
         > div { // Target the div rendered by DotLottieReact
             width: 100%;
             height: auto;
         }
    }
}

// --- DESKTOP STYLES ---
@media screen and (min-width: 992px) { // Adjusted breakpoint (e.g., Large devices)
    .hero {
        flex-direction: row; // Side-by-side layout
        justify-content: space-between; // Distribute space
        align-items: center; // Vertically align items in the middle
        padding: 15vh 5% 10vh 5%; // Desktop padding
        gap: 4rem; // Gap between text and graphic
        min-height: 80vh;

        .globe {
            top: -20rem; // Adjust globe position for desktop
            max-width: 70rem;
            opacity: 0.1;
        }

        .text {
            align-items: flex-start; // Align text left
            text-align: left;
            flex: 1 1 45%; // Allow text to take up ~45% of space
            max-width: 550px; // Max width for text block

            h1 {
                 font-size: clamp(3rem, 5vw, 3.8rem); // Larger desktop font size
                &:before {
                    left: 0; // Align highlight left
                    transform: translateX(0);
                    width: 70%;
                    height: 1.2rem;
                }
            }

            p {
                 font-size: clamp(1rem, 1.5vw, 1.1rem);
            }

             :global(.arrowBtn) { // Target ArrowButton
                margin-top: 1.5rem;
             }
        }

        .graphic {
            flex: 1 1 50%; // Allow graphic to take up ~50%
            max-width: 650px; // Larger max size for graphic
            width: auto; // Reset width to allow flex basis to work
            margin-left: 2rem; // Ensure some space
        }
    }
}